name: Deploy
on:
  push:
    branches: output-standalone
  pull_request:
    branches: output-standalone

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to clone the repository

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install step
        run: "npm install"

      - name: Build step
        env:
          GCP_SERVICE_ACCOUNT_BASE64: ${{ secrets.GCP_SERVICE_ACCOUNT_BASE64}}
          MICROCMS_BLOG_WEBHOOK_SECRET: ${{ secrets.MICROCMS_BLOG_WEBHOOK_SECRET}}
          NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_GA_MEASUREMENT_ID }}
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          DROPBOX_API_SECRET: ${{ secrets.DROPBOX_API_SECRET }}
          DROPBOX_API_KEY: ${{ secrets.DROPBOX_API_KEY }}
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          MICROCMS_API_KEY: ${{ secrets.MICROCMS_API_KEY }}
        run: "npm run build && (cp -r public .next/standalone/public; cp -r .next/static .next/standalone/.next/static; mv .next/standalone/server.js .next/standalone/server.cjs)"

      - name: Upload to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: "kamekyame-portfolio-93"
          entrypoint: "./server.cjs"
          root: ".next/standalone"
